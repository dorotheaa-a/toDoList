# Generated by Django 5.2.1 on 2025-06-07 16:09

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, default='')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(db_column='owner_id', on_delete=django.db.models.deletion.CASCADE, related_name='owned_notes', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_column='project_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='project.project')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=False)),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('permission_level', models.CharField(choices=[('view', 'Can View'), ('comment', 'Can Comment'), ('edit', 'Can Edit')], default='view', max_length=20)),
                ('note', models.ForeignKey(db_column='note_id', on_delete=django.db.models.deletion.CASCADE, related_name='collaboration_set', to='notes.note')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='note_collaborations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note Collaborator',
                'verbose_name_plural': 'Note Collaborators',
            },
        ),
        migrations.AddField(
            model_name='note',
            name='shared_with',
            field=models.ManyToManyField(related_name='collaborating_notes', through='notes.NoteCollaborator', through_fields=('note', 'user'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='notecollaborator',
            index=models.Index(fields=['user', 'note'], name='notes_notec_user_id_7c8084_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notecollaborator',
            unique_together={('user', 'note')},
        ),
        migrations.AddIndex(
            model_name='note',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='notes_note_search__2ae846_gin'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['project'], name='notes_note_project_970138_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['owner'], name='notes_note_owner_i_d20d92_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['updated_at'], name='notes_note_updated_0fcd5d_idx'),
        ),
    ]
