services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    env_file: .env  
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noteuser -d notedb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    # REMOVE TO MAKE DB EPHEMEREAL â†“
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Django Backend
  django:
    build:
      context: ./backend_django
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./djang_backend:/app

  # Express Backend
  express:
    build:
      context: ./backend-express
      dockerfile: Dockerfile.prod
    environment:
      - DB_HOST=db
      - DB_USER=noteuser
      - DB_PASSWORD=notepass
      - DB_NAME=notedb
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  # --- Golang Middleware Service (API Gateway / BFF) ---
  middleware:
    build:
      context: ./go_middleware 
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3001:3001" # HostPort:ContainerPort
    env_file:
      - .env.go_middleware # DJANGO_BACKEND_URL=http://backend:8000/api, GO_PORT
    depends_on:
      backend: # Go middleware depends on Django backend
        condition: service_started
    volumes:
      - ./go_middleware:/app

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      middleware: # Frontend depends on Go middleware
        condition: service_started
    volumes:
      - ./react_frontend:/app
      - /app/node_modules

volumes:
  postgres_data: